{"version":3,"sources":["music.mp3","context/score.context.ts","Buttons.tsx","Speech.tsx","lamp.png","light.png","App.tsx","reportWebVitals.js","index.js"],"names":["ScoreContext","React","createContext","score","setScore","Buttons","useContext","className","Speech","music","require","default","document","documentElement","App","useSound","loop","soundEnabled","volume","useState","Provider","value","src","light","lamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","href","rel","getElementById"],"mappings":"qMAAA,OAAe,cAA0B,wC,8FCO5BA,G,YAAeC,IAAMC,cAAwB,CAAEC,MAAO,EAAGC,SAAU,gB,OCHzE,SAASC,IACd,MAA4BC,qBAAWN,GAA/BG,EAAR,EAAQA,MAAR,EAAeC,SAYf,OACE,sBAAKG,UAAU,UAAf,UACE,sBAAKA,UAAU,QAAf,oBAA+BJ,KAC/B,qBAAKI,UAAU,6BAAf,iBACA,qBAAKA,UAAU,6BAAf,oBACA,qBAAKA,UAAU,6BAAf,sBACA,qBAAKA,UAAU,6BAAf,sB,MCnBC,SAASC,IACd,MAA4BF,qBAAWN,GAAvC,EAAQG,MAAR,EAAeC,SAGf,OAEE,qBAAKG,UAAU,mBAAf,SACE,qBAAKA,UAAU,SAAf,uBCXS,UAA0B,iCCA1B,MAA0B,kCCSnCE,EAAQC,EAAQ,IAAeC,QACxBC,SAASC,gBAmDPC,MA1Bf,WAIE,MAAeC,YAASN,EAAO,CAAEO,MAAM,EAAMC,cAAc,EAAMC,OAAQ,KACzE,GADA,oBAC8BC,oBAAS,IAAvC,mBACA,GADA,UAC0BA,mBAAS,IAAnC,mBAAOhB,EAAP,KAAcC,EAAd,KAEA,OACE,mCACE,eAACJ,EAAaoB,SAAd,CAAuBC,MAAO,CAAElB,QAAOC,YAAvC,UACA,sBAAKG,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAYe,IAAKC,IAChC,qBAAKhB,UAAU,WAAWe,IAAKE,IAC/B,cAAC,EAAD,OAMF,cAAC,EAAD,UC3CSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,sBAAMC,KAAK,0DAA0DC,IAAI,eACzE,qBAAK/B,UAAU,aACf,cAAC,EAAD,OAEFK,SAAS2B,eAAe,SAM1Bd,M","file":"static/js/main.e12a6b90.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"91186c71ad4e82001831e6aefacfc75f.mp3\";","import React from 'react'\n\nexport interface IContext {\n  score: number,\n  setScore: Function\n}\n\nexport const ScoreContext = React.createContext<IContext>({ score: 0, setScore: () => {} })\n","import { useContext } from 'react'\nimport './Buttons.css'\nimport { ScoreContext } from './context/score.context'\n\nexport function Buttons() {\n  const { score, setScore } = useContext(ScoreContext)\n\n  const makeSadder = () => {\n    const newScore = score - 1\n    setScore(newScore)\n  }\n\n  const makeHappier = () => {\n    const newScore = score + 1\n    setScore(newScore)\n  }\n\n  return (\n    <div className=\"Buttons\">\n      <div className=\"score\">Score: {score}</div>\n      <div className=\"btn btn--stripe btn--large\">Hug</div>\n      <div className=\"btn btn--stripe btn--large\">Say hi</div>\n      <div className=\"btn btn--stripe btn--large\">Make tea</div>\n      <div className=\"btn btn--stripe btn--large\">Punch</div>\n    </div>\n  )\n}\n\n","import { useContext } from 'react'\nimport './Speech.css'\nimport { ScoreContext } from './context/score.context'\n\nexport function Speech() {\n  const { score, setScore } = useContext(ScoreContext)\n\n\n  return (\n\n    <div className=\"speech-container\">\n      <div className=\"speech\">\n    hey you\n    </div>\n    </div>\n  )\n}\n\n","export default __webpack_public_path__ + \"static/media/lamp.1ab1e7bb.png\";","export default __webpack_public_path__ + \"static/media/light.e1e92035.png\";","import { useState } from 'react'\nimport useSound from 'use-sound'\nimport './App.css'\nimport { Buttons } from './Buttons'\nimport { Speech } from './Speech'\nimport lamp from './lamp.png'\nimport light from './light.png'\nimport {ScoreContext} from './context/score.context'\n\nconst music = require('./music.mp3').default\nconst root = document.documentElement\n\nfunction getRandomBetween(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction changeColor(timeout: number) {\n  setTimeout(() => {\n    root.style.setProperty('--brightness', getRandomBetween(70, 120) + '%')\n    root.style.setProperty('--hue', getRandomBetween(0, 180) + 'deg')\n    root.style.setProperty('--saturate', getRandomBetween(70, 120) + '%')\n    changeColor(getRandomBetween(1000, 10000))\n  }, timeout)\n}\n\nfunction blink() {\n  root.style.setProperty('--opacity', '0%')\n  setTimeout(() => {\n    root.style.setProperty('--opacity', '100%')\n    setTimeout(() => {\n      blink()\n    }, getRandomBetween(1000, 10000))\n  }, getRandomBetween(100, 200))\n}\n\nfunction App() {\n  //changeColor(0)\n  //blink()\n\n  const [play] = useSound(music, { loop: true, soundEnabled: true, volume: .4 })\n  const [showBtn, setShowBtn] = useState(true)\n  const [score, setScore] = useState(0)\n\n  return (\n    <>\n      <ScoreContext.Provider value={{ score, setScore }}>\n      <div className=\"Game\">\n        <img className=\"img light\" src={light}/>\n        <img className=\"img lamp\" src={lamp}/>\n        <Speech/>\n        {/*{showBtn && <button className=\"start-btn\" onClick={() => {*/}\n        {/*  // play();*/}\n        {/*  setShowBtn(false)*/}\n        {/*}}>Play</button>}*/}\n      </div>\n      <Buttons/>\n      </ScoreContext.Provider>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <link href=\"https://fonts.googleapis.com/css?family=Baloo+2:400,800\" rel=\"stylesheet\"/>\n    <div className=\"light bg\"/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n//document.getElementById('root').classList.add('light');\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}