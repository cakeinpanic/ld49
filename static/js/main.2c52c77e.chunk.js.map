{"version":3,"sources":["assets/ludum_dare_beta_-5.mp3","assets/ludum_dare_beta_-2.5.mp3","assets/ludum_dare_beta_0.mp3","assets/ludum_dare_beta_2.5.mp3","assets/ludum_dare_beta_5.mp3","assets/ludum_dare_beta_plus.mp3","assets/ludum_dare_beta_minus.mp3","lampState.enum.ts","context/score.context.ts","context/speech.context.tsx","PHRASES.ts","Buttons.tsx","context/loaded.context.tsx","assets/lamp.png","assets/light.png","assets/medium_light.png","assets/sad_lamp.png","assets/sad_light.png","Lamp.tsx","Music.tsx","Speech.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["eLampState","getStateByScore","score","happy","ok","neutral","sad","nightmare","ScoreContext","React","createContext","lampState","setScore","initialState","currentPhraseIndex","setNextPhrase","getQuestion","getAnswers","PHRASES","used","text","map","value","sort","Math","random","a","b","SpeechContext","SpeechContextProvider","setGameOver","children","useState","setCurrentPhraseIndex","Provider","length","question","answers","Buttons","useContext","className","onClick","answerScore","LoadedContext","LoadedContextProvider","setAllIsLoaded","sound","setSound","images","setImages","useEffect","setTimeout","soundLoaded","imagesAreLoaded","LAMP_ID","getRandomBetween","min","max","Lamp","timeoutRef","useRef","blinkTimeoutRef","blink","useCallback","root","document","body","withoutLight","nextBlink","clearTimeout","current","style","setProperty","changeColor","getElementById","nextChange","setBgColor","loadedCount","setLoadedCount","imgLoaded","id","opacity","undefined","src","light","onLoad","mediumLight","lamp","sadLight","sadLamp","require","default","plus","minus","VOLUME","params","loop","soundEnabled","volume","doSound","currentSound","soundState","howlerObject","fade","Music","gameStarted","useSound","nightmareSound","sadSound","neutralSound","okSound","happySound","plusJingle","minusJingle","setCurrentSound","prevScore","state","play","console","log","Speech","App","setGameStarted","showControls","setShowControls","setLampState","allIsLoaded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","href","rel"],"mappings":"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","file":"static/js/main.2c52c77e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"1e08c02ffb091b99fb2facf24618c7f8.mp3\";","export default __webpack_public_path__ + \"ed14d2196c6a0a8bf20a14c8c076ddd8.mp3\";","export default __webpack_public_path__ + \"e50d51ee58c6ec04b8cffdb182707bfa.mp3\";","export default __webpack_public_path__ + \"786120ca73fc6fc78ce66d044b9d37d2.mp3\";","export default __webpack_public_path__ + \"de8730f7f67fb59b3387c7dab07f1b00.mp3\";","export default __webpack_public_path__ + \"2547c50ab2ea29129121bb2e92415d91.mp3\";","export default __webpack_public_path__ + \"2ab3acbb7166e282f2465998f93c1c7e.mp3\";","export enum eLampState {\n  happy = 'happy', ok = 'ok', neutral = 'neutral', sad = 'sad', nightmare = 'nightmare'\n}\n\nexport function getStateByScore(score: number): eLampState {\n  if (score >= 4.5) {\n    return eLampState.happy\n  }\n  if (score >= 2.5) {\n    return (eLampState.ok)\n  }\n\n  if (score >= 0) {\n    return (eLampState.neutral)\n  }\n\n  if (score >= -2.5) {\n    return (eLampState.sad)\n  }\n\n  return (eLampState.nightmare)\n\n}\n","import React from 'react'\nimport { eLampState } from '../lampState.enum'\n\nexport interface IContext {\n  score: number,\n  lampState: eLampState,\n  setScore: Function\n}\n\nexport const ScoreContext = React.createContext<IContext>({ score: 0, lampState: eLampState.neutral, setScore: () => {} })\n","import React, { useState } from 'react'\nimport { FIRST_PHRASE, IAnswer, IState, REST_PHRASES } from '../PHRASES'\n\nexport interface ISpeechContext {\n  currentPhraseIndex: number\n  setNextPhrase: Function\n  getQuestion: () => string\n  getAnswers: () => IAnswer[]\n}\n\nconst initialState = {\n  currentPhraseIndex: 0,\n  setNextPhrase: () => {},\n  getQuestion: () => 'string',\n  getAnswers: () => []\n}\n\nconst shuffle = (arr: any[]) => {\n  return arr\n    .map((value) => ({ value, sort: Math.random() }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(({ value }) => value)\n}\nconst PHRASES: IState[] = [FIRST_PHRASE, ...shuffle(REST_PHRASES)]\n\nexport const SpeechContext = React.createContext<ISpeechContext>(initialState)\n\nexport function SpeechContextProvider({ setGameOver, children }: { setGameOver: Function, children: any }) {\n  const setNextPhrase = () => {\n    PHRASES[currentPhraseIndex].used = true\n    if (currentPhraseIndex === PHRASES.length - 1) {\n      setCurrentPhraseIndex(0)\n      //setGameOver()\n    } else {\n      setCurrentPhraseIndex(currentPhraseIndex + 1)\n    }\n  }\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0)\n\n  return (\n    <SpeechContext.Provider value={\n      {\n        currentPhraseIndex, setNextPhrase,\n        getQuestion: () => {\n          return PHRASES[currentPhraseIndex]?.question || 'Game over'\n        },\n        getAnswers: () => {\n          return PHRASES[currentPhraseIndex]?.answers || []\n        }\n      }\n    }>\n      {children}\n    </SpeechContext.Provider>\n  )\n}\n","export interface IState {\n  question: string,\n  used: boolean,\n  answers: IAnswer[]\n}\nexport interface IAnswer { text: string, score: number }\nexport const FIRST_PHRASE: IState = {\n  'question': 'Hey...I\\'m Greg the Lamp',\n  used: false,\n  'answers': [\n    {\n      'text': 'Hi, Greg',\n      'score': 0\n    },\n    {\n      'text': 'I\\'m not interested',\n      'score': -1\n    },\n    {\n      'text': 'You look sad, Greg, wanna talk?',\n      'score': .5\n    },\n    {\n      'text': 'Wow, talking lamp, lol',\n      'score': -.5\n    }\n  ]\n}\n\n\nexport const REST_PHRASES: IState[] = [\n  {\n    'question': 'I feel lonely',\n    used: false,\n    'answers': [\n      {\n        text: 'Hug',\n        'score': 1\n      },\n      {\n        'text': 'Ignore',\n        'score': -1\n      },\n      {\n        'text': 'Everyone\\'s lonely...',\n        'score': -.5\n      },\n      {\n        'text': 'I\\'m lonely too',\n        'score': .5\n      }\n    ]\n  },\n  {\n    'question': 'I feel abused, everyone uses me to get what they want!',\n    used: false,\n    'answers': [\n      {\n        text: 'Hug',\n        'score': 1\n      },\n      {\n        'text': 'Turn him off',\n        'score': -1\n      },\n      {\n        'text': '...',\n        'score': -.5\n      },\n      {\n        'text': 'Your are helping people to see things at night or just to feel cozy, you are good lamp',\n        'score': 1\n      }\n    ]\n  },\n  {\n    'question': 'I don\\'t have any friends, why do other lamps avoid me?',\n    used: false,\n    'answers': [\n      {\n        text: 'I\\'m not a lamp, but we can be friends',\n        'score': 1\n      },\n      {\n        'text': 'Nobody wanna be a friend with you, you are just an old lamp',\n        'score': -2\n      },\n      {\n        'text': 'Start looking for another lamp',\n        'score': -1\n      },\n      {\n        'text': 'Tell me more about other lamps, why do think so?',\n        'score': .5\n      }\n    ]\n  },\n]\n","import { useContext } from 'react'\nimport './Buttons.css'\nimport { ScoreContext } from './context/score.context'\nimport { SpeechContext } from './context/speech.context'\n\nexport function Buttons() {\n  const { score, setScore } = useContext(ScoreContext)\n  const { getAnswers, setNextPhrase } = useContext(SpeechContext)\n\n  const clicked = (answerScore: number) => {\n    setScore(score + answerScore)\n    setNextPhrase()\n\n  }\n  return (\n    <div className=\"Buttons\">\n      <div className=\"score\">Score: {score}</div>\n      {\n        getAnswers()\n          .map(\n            a => <div className=\"btn btn--stripe\" key={a.text}\n                      onClick={() => clicked(a.score)}>{a.text}</div>)\n      }\n    </div>\n  )\n}\n\n","import React, { useEffect, useState } from 'react'\n\nexport interface ILoadedContext {\n  soundLoaded?: Function\n  imagesAreLoaded?: Function\n}\n\nexport const LoadedContext = React.createContext<ILoadedContext>({})\n\nexport function LoadedContextProvider({ children, setAllIsLoaded }: { children: any, setAllIsLoaded: Function }) {\n  const [sound, setSound] = useState(false)\n  const [images, setImages] = useState(false)\n\n  useEffect(() => {\n    if(sound && images){\n      setTimeout(setAllIsLoaded(sound && images), 1000)\n    }\n  }, [sound, images, setAllIsLoaded])\n\n  return (\n    <LoadedContext.Provider value={\n      {\n        soundLoaded: setSound,\n        imagesAreLoaded: setImages,\n      }\n    }>\n      {children}\n    </LoadedContext.Provider>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/lamp.cf80ac2c.png\";","export default __webpack_public_path__ + \"static/media/light.59e00472.png\";","export default __webpack_public_path__ + \"static/media/medium_light.d3ef943c.png\";","export default __webpack_public_path__ + \"static/media/sad_lamp.d083bd5f.png\";","export default __webpack_public_path__ + \"static/media/sad_light.91eb97c4.png\";","import { useCallback, useContext, useEffect, useRef, useState } from 'react'\nimport lamp from './assets/lamp.png'\nimport light from './assets/light.png'\nimport mediumLight from './assets/medium_light.png'\nimport sadLamp from './assets/sad_lamp.png'\nimport sadLight from './assets/sad_light.png'\nimport { LoadedContext } from './context/loaded.context'\nimport { ScoreContext } from './context/score.context'\nimport './Lamp.css'\nimport { eLampState } from './lampState.enum'\n\nconst LAMP_ID = 'lamp'\n\nfunction getRandomBetween([min, max]: number[]) {\n  const random = Math.random() * (max - min) + min\n//  console.log(random, min, max)\n  return random\n}\n\nfunction setBgColor(lampState: eLampState) {\n  const root = document.body\n\n  switch (lampState) {\n    case eLampState.happy:\n    case eLampState.ok:\n    case eLampState.neutral:\n      root?.style.setProperty('--bg', '#3d3d46')\n      break\n    case eLampState.sad:\n      root?.style.setProperty('--bg', '#1d1d26')\n      break\n    case eLampState.nightmare:\n      root?.style.setProperty('--bg', '#1a1a1d')\n  }\n\n}\n\nexport function Lamp() {\n  const { lampState } = useContext(ScoreContext)\n\n  const timeoutRef = useRef<any>()\n  const blinkTimeoutRef = useRef<any>()\n\n  const blink = useCallback(() => {\n    const root = document.body\n    let withoutLight = [100, 200]\n    let nextBlink = [1000, 2000]\n    switch (lampState) {\n      case eLampState.nightmare:\n        withoutLight = [100, 1500]\n        nextBlink = [100, 500]\n        break\n      case eLampState.sad:\n        withoutLight = [200, 500]\n        nextBlink = [1000, 4000]\n        break\n      case eLampState.neutral:\n        withoutLight = [100, 200]\n        nextBlink = [5000, 8000]\n        break\n    }\n\n    clearTimeout(blinkTimeoutRef.current)\n    if (lampState === eLampState.nightmare || lampState === eLampState.sad || lampState === eLampState.neutral) {\n      root?.style.setProperty('--opacity-filter', '0%')\n    }\n    setTimeout(() => {\n      root?.style.setProperty('--opacity-filter', '100%')\n      blinkTimeoutRef.current = setTimeout(() => {\n        blink()\n      }, getRandomBetween(nextBlink))\n    }, getRandomBetween(withoutLight))\n  }, [lampState])\n\n  const changeColor = useCallback(() => {\n    clearTimeout(timeoutRef.current)\n    const root = document.getElementById(LAMP_ID)\n\n    if (lampState === eLampState.ok || lampState === eLampState.happy || lampState === eLampState.neutral) {\n      root?.style.setProperty('--brightness', getRandomBetween([70, 120]) + '%')\n      root?.style.setProperty('--hue', getRandomBetween([0, 180]) + 'deg')\n      root?.style.setProperty('--saturate', getRandomBetween([70, 120]) + '%')\n    } else {\n\n      root?.style.setProperty('--hue', 0 + 'deg')\n      root?.style.setProperty('--saturate', 30 + '%')\n    }\n    let nextChange = [1000, 1000]\n\n    switch (lampState) {\n      case eLampState.happy:\n        nextChange = [500, 1000]\n        break\n      case eLampState.ok:\n        nextChange = [2000, 5000]\n        break\n      case eLampState.neutral:\n        nextChange = [2000, 5000]\n        break\n    }\n\n    timeoutRef.current = setTimeout(changeColor, getRandomBetween(nextChange))\n  }, [lampState])\n\n  useEffect(() => {\n    changeColor()\n    blink()\n    setBgColor(lampState)\n  }, [lampState, changeColor, blink])\n\n  const { imagesAreLoaded } = useContext(LoadedContext)\n  const [loadedCount, setLoadedCount] = useState(0)\n\n  const imgLoaded = () => {\n    setLoadedCount(loadedCount + 1)\n\n    if (loadedCount === 4) {\n      imagesAreLoaded && imagesAreLoaded(true)\n    }\n  }\n\n  return (\n    <div id={LAMP_ID}>\n      <img className=\"img light\"\n           style={{ opacity: lampState === eLampState.happy || lampState === eLampState.ok ? undefined : 0 }}\n           src={light}\n           onLoad={imgLoaded}/>\n      <img className=\"img light\"\n           style={{ opacity: lampState === eLampState.neutral || lampState === eLampState.sad ? undefined : 0 }}\n           src={mediumLight} onLoad={imgLoaded}/>\n      <img className=\"img lamp\" style={{ opacity: lampState !== eLampState.nightmare ? 1 : 0 }} src={lamp}\n           onLoad={imgLoaded}/>\n\n      <img className=\"img light\" style={{ opacity: lampState === eLampState.nightmare ? undefined : 0 }} src={sadLight}\n           onLoad={imgLoaded}/>\n      <img className=\"img lamp\" style={{ opacity: lampState === eLampState.nightmare ? 1 : 0 }} src={sadLamp}\n           onLoad={imgLoaded}/>\n    </div>\n  )\n}\n\n","import { useContext, useEffect, useRef, useState } from 'react'\nimport useSound from 'use-sound'\nimport './App.css'\nimport { LoadedContext } from './context/loaded.context'\nimport { ScoreContext } from './context/score.context'\nimport { eLampState } from './lampState.enum'\n\nconst nightmare = require('./assets/ludum_dare_beta_-5.mp3').default\nconst sad = require('./assets/ludum_dare_beta_-2.5.mp3').default\nconst neutral = require('./assets/ludum_dare_beta_0.mp3').default\nconst ok = require('./assets/ludum_dare_beta_2.5.mp3').default\nconst happy = require('./assets/ludum_dare_beta_5.mp3').default\n\nconst plus = require('./assets/ludum_dare_beta_plus.mp3').default\nconst minus = require('./assets/ludum_dare_beta_minus.mp3').default\n\nconst VOLUME = .35\nconst FADE_DURATION = 800\nconst params = { loop: true, soundEnabled: true, volume: 0 }\n\nfunction doSound(currentSound: eLampState | null, soundState: eLampState, howlerObject: any) {\n  if (!howlerObject) {\n    return\n  }\n  if (currentSound === soundState) {\n    howlerObject.fade(howlerObject.volume(), VOLUME, FADE_DURATION)\n  } else {\n    howlerObject.fade(howlerObject.volume(), 0, FADE_DURATION)\n  }\n}\n\nexport function Music({ gameStarted }: { gameStarted: boolean }) {\n  const { score, lampState } = useContext(ScoreContext)\n  const { soundLoaded } = useContext(LoadedContext)\n\n  const [, { sound: nightmareSound }] = useSound(nightmare, params)\n  const [, { sound: sadSound }] = useSound(sad, params)\n  const [, { sound: neutralSound }] = useSound(neutral, params)\n  const [, { sound: okSound }] = useSound(ok, params)\n  const [, { sound: happySound }] = useSound(happy, params)\n\n  const [, { sound: plusJingle }] = useSound(plus, { loop: false, volume: VOLUME })\n  const [, { sound: minusJingle }] = useSound(minus, { loop: false, volume: VOLUME })\n\n  const [currentSound, setCurrentSound] = useState<eLampState | null>(null)\n\n  const prevScore = useRef<number>(score)\n\n  useEffect(() => {\n    if (neutralSound?.state() === 'loaded'\n      && okSound?.state() === 'loaded'\n      && nightmareSound?.state() === 'loaded'\n      && sadSound?.state() === 'loaded'\n      && happySound?.state() === 'loaded'\n    ) {\n      soundLoaded && soundLoaded(true)\n      neutralSound.play()\n      okSound.play()\n      happySound.play()\n      nightmareSound.play()\n      sadSound.play()\n    }\n\n  }, [soundLoaded, neutralSound, happySound, nightmareSound, sadSound, okSound])\n  //\n  //useEffect(() => {\n  //\n  //  console.log(score, currentSound, [happySound, okSound, neutralSound, sadSound, nightmareSound].map(s => {\n  //    return (s?.volume() + s?.state())\n  //  }))\n  //}, [currentSound, score,  neutralSound, happySound, okSound, sadSound, nightmareSound])\n\n  useEffect(() => {\n      if (!gameStarted) {\n        return\n      }\n      setCurrentSound(lampState)\n    },\n    [lampState, gameStarted]\n  )\n\n  useEffect(() => {\n    console.log(prevScore.current, score)\n    if (prevScore.current === score) {\n      return\n    }\n    if (prevScore.current < score) {\n      plusJingle?.play()\n    } else {\n      minusJingle?.play()\n    }\n    prevScore.current = score\n  }, [score, minusJingle, plusJingle])\n\n  useEffect(() => {\n    doSound(currentSound, eLampState.neutral, neutralSound)\n    doSound(currentSound, eLampState.nightmare, nightmareSound)\n    doSound(currentSound, eLampState.sad, sadSound)\n    doSound(currentSound, eLampState.ok, okSound)\n    doSound(currentSound, eLampState.happy, happySound)\n  }, [currentSound, neutralSound, happySound, okSound, sadSound, nightmareSound])\n\n  return (\n    <>\n\n    </>\n  )\n}\n\n","import { useContext } from 'react'\nimport { ScoreContext } from './context/score.context'\nimport './Speech.css'\nimport { SpeechContext } from './context/speech.context'\n\nexport function Speech() {\n  const { score, setScore } = useContext(ScoreContext)\n  const { getQuestion } = useContext(SpeechContext)\n\n  return (\n\n    <div className=\"speech-container\">\n      <div className=\"speech\">\n        {getQuestion()}\n      </div>\n    </div>\n  )\n}\n\n","import React, { useEffect, useState } from 'react'\nimport './App.css'\nimport { Buttons } from './Buttons'\nimport { LoadedContextProvider } from './context/loaded.context'\nimport { ScoreContext } from './context/score.context'\nimport { SpeechContextProvider } from './context/speech.context'\nimport { Lamp } from './Lamp'\nimport { getStateByScore } from './lampState.enum'\nimport { Music } from './Music'\nimport { Speech } from './Speech'\n\nfunction App() {\n\n  const [gameStarted, setGameStarted] = useState(false)\n  const [showControls, setShowControls] = useState(false)\n  const [score, setScore] = useState(0)\n  const [lampState, setLampState] = useState(getStateByScore(score))\n\n  const [allIsLoaded, setAllIsLoaded] = useState(false)\n\n  useEffect(() => {\n    if (gameStarted) {\n      setShowControls(true)\n    }\n  }, [gameStarted])\n\n  useEffect(() => {\n    setLampState(getStateByScore(score))\n  }, [score])\n\n  const setGameOver = () => {\n\n  }\n\n  return (\n    <>\n      <LoadedContextProvider setAllIsLoaded={setAllIsLoaded}>\n        <SpeechContextProvider setGameOver={setGameOver}>\n          <ScoreContext.Provider value={{ score, setScore, lampState }}>\n\n            <Music gameStarted={gameStarted}/>\n            {!allIsLoaded && <button className=\"loading-btn btn--stripe btn\">\n              Loading...\n            </button>}\n            <div className=\"Game\" style={{ opacity: allIsLoaded ? 1 : 0 }}>\n              <div className={'light bg ' + lampState}/>\n              <Lamp/>\n              {showControls && <Speech/>}\n              {\n                !gameStarted &&\n                <button className=\"btn--stripe start-btn btn\"\n                        onClick={() => {setGameStarted(true)}}>\n                  Play\n                </button>\n              }\n            </div>\n            {showControls && <Buttons/>}\n          </ScoreContext.Provider>\n        </SpeechContextProvider>\n      </LoadedContextProvider>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <link href=\"https://fonts.googleapis.com/css?family=Baloo+2:400,800\" rel=\"stylesheet\"/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n//document.getElementById('root').classList.add('light');\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}