{"version":3,"sources":["assets/ludum_dare_beta_-5.mp3","assets/ludum_dare_beta_-2.5.mp3","assets/ludum_dare_beta_0.mp3","assets/ludum_dare_beta_2.5.mp3","assets/ludum_dare_beta_5.mp3","assets/ludum_dare_beta_plus.mp3","assets/ludum_dare_beta_minus.mp3","lampState.enum.ts","context/score.context.ts","context/speech.context.tsx","PHRASES.ts","Buttons.tsx","context/loaded.context.tsx","assets/lamp.png","assets/light.png","assets/medium_light.png","assets/sad_lamp.png","assets/sad_light.png","hooks/bgColor.hook.ts","hooks/hook.utils.ts","Lamp.tsx","hooks/lightTransitions.hook.ts","hooks/lightBlink.hook.ts","Music.tsx","Speech.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["eLampState","getStateByScore","score","happy","ok","neutral","sad","nightmare","ScoreContext","React","createContext","lampState","setScore","initialState","currentPhraseIndex","setNextPhrase","getQuestion","getAnswers","PHRASES","used","text","map","value","sort","Math","random","a","b","SpeechContext","SpeechContextProvider","setGameOver","children","useState","setCurrentPhraseIndex","Provider","length","question","answers","Buttons","useContext","clicked","answerScore","className","onClick","LoadedContext","LoadedContextProvider","setAllIsLoaded","sound","setSound","images","setImages","useEffect","setTimeout","soundLoaded","imagesAreLoaded","useBgColor","root","document","body","style","setProperty","setBgColor","LAMP_ID","getRandomBetween","min","max","Lamp","timeoutRef","useRef","changeColor","useCallback","clearTimeout","current","getElementById","nextChange","useLightTransitions","blinkTimeoutRef","blink","withoutLight","nextBlink","useLightBlink","loadedCount","setLoadedCount","imgLoaded","id","state","lampStateToRender","opacity","lampImg","lightImg","sadLamp","sadLight","lamp","mediumLight","light","src","onLoad","getLampImage","require","default","plus","minus","params","loop","soundEnabled","volume","doSound","currentSound","soundState","howlerObject","fade","Music","gameStarted","useSound","nightmareSound","sadSound","neutralSound","okSound","happySound","plusJingle","minusJingle","setCurrentSound","prevScore","play","Speech","App","setGameStarted","showControls","setShowControls","setLampState","allIsLoaded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","href","rel"],"mappings":"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","file":"static/js/main.bd379282.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"1e08c02ffb091b99fb2facf24618c7f8.mp3\";","export default __webpack_public_path__ + \"ed14d2196c6a0a8bf20a14c8c076ddd8.mp3\";","export default __webpack_public_path__ + \"e50d51ee58c6ec04b8cffdb182707bfa.mp3\";","export default __webpack_public_path__ + \"786120ca73fc6fc78ce66d044b9d37d2.mp3\";","export default __webpack_public_path__ + \"de8730f7f67fb59b3387c7dab07f1b00.mp3\";","export default __webpack_public_path__ + \"2547c50ab2ea29129121bb2e92415d91.mp3\";","export default __webpack_public_path__ + \"2ab3acbb7166e282f2465998f93c1c7e.mp3\";","export enum eLampState {\n  happy = 'happy', ok = 'ok', neutral = 'neutral', sad = 'sad', nightmare = 'nightmare'\n}\n\nexport function getStateByScore(score: number): eLampState {\n  if (score >= 4.5) {\n    return eLampState.happy\n  }\n  if (score >= 2.5) {\n    return (eLampState.ok)\n  }\n\n  if (score >= 0) {\n    return (eLampState.neutral)\n  }\n\n  if (score >= -2.5) {\n    return (eLampState.sad)\n  }\n\n  return (eLampState.nightmare)\n\n}\n","import React from 'react'\nimport { eLampState } from '../lampState.enum'\n\nexport interface IContext {\n  score: number,\n  lampState: eLampState,\n  setScore: Function\n}\n\nexport const ScoreContext = React.createContext<IContext>({ score: 0, lampState: eLampState.neutral, setScore: () => {} })\n","import React, { useState } from 'react'\nimport { FIRST_PHRASE, IAnswer, IState, REST_PHRASES } from '../PHRASES'\n\nexport interface ISpeechContext {\n  currentPhraseIndex: number\n  setNextPhrase: Function\n  getQuestion: () => string\n  getAnswers: () => IAnswer[]\n}\n\nconst initialState = {\n  currentPhraseIndex: 0,\n  setNextPhrase: () => {},\n  getQuestion: () => 'string',\n  getAnswers: () => []\n}\n\nconst shuffle = (arr: any[]) => {\n  return arr\n    .map((value) => ({ value, sort: Math.random() }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(({ value }) => value)\n}\nconst PHRASES: IState[] = [FIRST_PHRASE, ...shuffle(REST_PHRASES)]\n\nexport const SpeechContext = React.createContext<ISpeechContext>(initialState)\n\nexport function SpeechContextProvider({ setGameOver, children }: { setGameOver: Function, children: any }) {\n  const setNextPhrase = () => {\n    PHRASES[currentPhraseIndex].used = true\n    if (currentPhraseIndex === PHRASES.length - 1) {\n      setCurrentPhraseIndex(0)\n      //setGameOver()\n    } else {\n      setCurrentPhraseIndex(currentPhraseIndex + 1)\n    }\n  }\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0)\n\n  return (\n    <SpeechContext.Provider value={\n      {\n        currentPhraseIndex, setNextPhrase,\n        getQuestion: () => {\n          return PHRASES[currentPhraseIndex]?.question || 'Game over'\n        },\n        getAnswers: () => {\n          return PHRASES[currentPhraseIndex]?.answers || []\n        }\n      }\n    }>\n      {children}\n    </SpeechContext.Provider>\n  )\n}\n","export interface IState {\n  question: string,\n  used: boolean,\n  answers: IAnswer[]\n}\nexport interface IAnswer { text: string, score: number }\nexport const FIRST_PHRASE: IState = {\n  'question': 'Hey...I\\'m Greg the Lamp',\n  used: false,\n  'answers': [\n    {\n      'text': 'Hi, Greg',\n      'score': 0\n    },\n    {\n      'text': 'I\\'m not interested',\n      'score': -1\n    },\n    {\n      'text': 'You look sad, Greg, wanna talk?',\n      'score': .5\n    },\n    {\n      'text': 'Wow, talking lamp, lol',\n      'score': -.5\n    }\n  ]\n}\n\n\nexport const REST_PHRASES: IState[] = [\n  {\n    'question': 'I feel lonely',\n    used: false,\n    'answers': [\n      {\n        text: 'Hug',\n        'score': 1\n      },\n      {\n        'text': 'Ignore',\n        'score': -1\n      },\n      {\n        'text': 'Everyone\\'s lonely...',\n        'score': -.5\n      },\n      {\n        'text': 'I\\'m lonely too',\n        'score': .5\n      }\n    ]\n  },\n  {\n    'question': 'I feel abused, everyone uses me to get what they want!',\n    used: false,\n    'answers': [\n      {\n        text: 'Hug',\n        'score': 1\n      },\n      {\n        'text': 'Turn him off',\n        'score': -1\n      },\n      {\n        'text': '...',\n        'score': -.5\n      },\n      {\n        'text': 'Your are helping people to see things at night or just to feel cozy, you are good lamp',\n        'score': 1\n      }\n    ]\n  },\n  {\n    'question': 'I don\\'t have any friends, why do other lamps avoid me?',\n    used: false,\n    'answers': [\n      {\n        text: 'I\\'m not a lamp, but we can be friends',\n        'score': 1\n      },\n      {\n        'text': 'Nobody wanna be a friend with you, you are just an old lamp',\n        'score': -2\n      },\n      {\n        'text': 'Start looking for another lamp',\n        'score': -1\n      },\n      {\n        'text': 'Tell me more about other lamps. Why do think so?',\n        'score': .5\n      }\n    ]\n  },\n  {\n    'question': 'Sometimes I think about changing my job. Is it real for lamp like me to become a game dev?',\n    used: false,\n    'answers': [\n      {\n        text: 'Nah, you should be good at math',\n        'score': -2\n      },\n      {\n        'text': 'Hug',\n        'score': -0.5\n      },\n      {\n        'text': 'I heard that they have a nice salary',\n        'score': -1\n      },\n      {\n        'text': 'You should give it a try. I belive in you.',\n        'score': 1\n      }\n    ]\n  },\n  {\n    'question': 'They keep forgeting to turn me off, I can burn out!',\n    used: false,\n    'answers': [\n      {\n        text: 'I don\\'t know. You should ask your them, not me',\n        'score': -1\n      },\n      {\n        'text': 'I thought you like your work',\n        'score': -2\n      },\n      {\n        'text': '...',\n        'score': 0\n      },\n      {\n        'text': 'You should not wait for their attention. You are just a lamp',\n        'score': -2\n      }\n    ]\n  },\n]\n","import { useContext } from 'react'\nimport './Buttons.css'\nimport { ScoreContext } from './context/score.context'\nimport { SpeechContext } from './context/speech.context'\n\nexport function Buttons() {\n  const { score, setScore } = useContext(ScoreContext)\n  const { getAnswers, setNextPhrase } = useContext(SpeechContext)\n\n  const clicked = (answerScore: number) => {\n    setScore(score + answerScore)\n    setNextPhrase()\n\n  }\n  return (\n    <>\n      <div className=\"debug\">\n        <div className=\"btn btn--stripe\" onClick={() => clicked(-1)}>minus</div>\n        <div className=\"btn btn--stripe\" onClick={() => clicked(1)}>plus</div>\n\n        <div className=\"score\">Score: {score}</div>\n      </div>\n    <div className=\"Buttons\">\n\n      {\n        getAnswers()\n          .map(\n            a => <div className=\"btn btn--stripe\" key={a.text}\n                      onClick={() => clicked(a.score)}>{a.text}</div>)\n      }\n    </div>\n      </>\n  )\n}\n\n","import React, { useEffect, useState } from 'react'\n\nexport interface ILoadedContext {\n  soundLoaded?: Function\n  imagesAreLoaded?: Function\n}\n\nexport const LoadedContext = React.createContext<ILoadedContext>({})\n\nexport function LoadedContextProvider({ children, setAllIsLoaded }: { children: any, setAllIsLoaded: Function }) {\n  const [sound, setSound] = useState(false)\n  const [images, setImages] = useState(false)\n\n  useEffect(() => {\n    if(sound && images){\n      setTimeout(setAllIsLoaded(sound && images), 1000)\n    }\n  }, [sound, images, setAllIsLoaded])\n\n  return (\n    <LoadedContext.Provider value={\n      {\n        soundLoaded: setSound,\n        imagesAreLoaded: setImages,\n      }\n    }>\n      {children}\n    </LoadedContext.Provider>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/lamp.cf80ac2c.png\";","export default __webpack_public_path__ + \"static/media/light.59e00472.png\";","export default __webpack_public_path__ + \"static/media/medium_light.d3ef943c.png\";","export default __webpack_public_path__ + \"static/media/sad_lamp.d083bd5f.png\";","export default __webpack_public_path__ + \"static/media/sad_light.91eb97c4.png\";","import { useEffect } from 'react'\nimport { eLampState } from '../lampState.enum'\n\nfunction setBgColor(lampState: eLampState) {\n  const root = document.body\n\n  switch (lampState) {\n    case eLampState.happy:\n    case eLampState.ok:\n    case eLampState.neutral:\n      root?.style.setProperty('--bg', '#3d3d46')\n      break\n    case eLampState.sad:\n      root?.style.setProperty('--bg', '#1d1d26')\n      break\n    case eLampState.nightmare:\n      root?.style.setProperty('--bg', '#1a1a1d')\n  }\n\n}\n\nexport const useBgColor = (lampState: eLampState) => {\n  useEffect(() => {\n    setBgColor(lampState)\n  }, [lampState])\n}\n","export const LAMP_ID = 'lamp'\n\nexport function getRandomBetween([min, max]: number[]) {\n  const random = Math.random() * (max - min) + min\n\n  return random\n}\n","import { useContext, useEffect, useState } from 'react'\nimport lamp from './assets/lamp.png'\nimport light from './assets/light.png'\nimport mediumLight from './assets/medium_light.png'\nimport sadLamp from './assets/sad_lamp.png'\nimport sadLight from './assets/sad_light.png'\nimport { LoadedContext } from './context/loaded.context'\nimport { ScoreContext } from './context/score.context'\nimport { useBgColor } from './hooks/bgColor.hook'\nimport { LAMP_ID } from './hooks/hook.utils'\nimport { useLightBlink } from './hooks/lightBlink.hook'\nimport { useLightTransitions } from './hooks/lightTransitions.hook'\nimport './Lamp.css'\nimport { eLampState } from './lampState.enum'\n\nexport function Lamp() {\n  const { lampState } = useContext(ScoreContext)\n\n  useLightTransitions(lampState)\n  useLightBlink(lampState)\n  useBgColor(lampState)\n\n  const { imagesAreLoaded } = useContext(LoadedContext)\n  const [loadedCount, setLoadedCount] = useState(0)\n\n  const imgLoaded = () => {\n    setLoadedCount(loadedCount + 1)\n  }\n\n  useEffect(() => {\n    if (loadedCount === 2 * 5) {\n      imagesAreLoaded && imagesAreLoaded(true)\n    }\n  }, [loadedCount, imagesAreLoaded])\n\n  const getLampImage = (lampStateToRender: eLampState) => {\n    let opacity\n    let lampImg\n    let lightImg\n    opacity = (lampState === lampStateToRender) ? 1 : 0\n    switch (lampStateToRender) {\n      case eLampState.nightmare:\n\n        lampImg = sadLamp\n        lightImg = sadLight\n        break\n      case eLampState.sad:\n      case eLampState.neutral:\n        lampImg = lamp\n        lightImg = mediumLight\n        break\n      case eLampState.ok:\n      case eLampState.happy:\n        lightImg = light\n        lampImg = lamp\n        break\n    }\n    return (\n      <div style={{ opacity }} key={lampStateToRender} className=\"lamp-container\">\n        <img className=\"img light\" src={lightImg} onLoad={imgLoaded}/>\n        <img className=\"img lamp\" src={lampImg} onLoad={imgLoaded}/>\n      </div>\n    )\n  }\n\n  return (\n    <div id={LAMP_ID}>\n      {[eLampState.nightmare, eLampState.sad, eLampState.neutral, eLampState.ok, eLampState.happy].map(\n        state => getLampImage(state))}\n    </div>\n  )\n}\n\n","import { useCallback, useEffect, useRef } from 'react'\nimport { eLampState } from '../lampState.enum'\nimport { getRandomBetween, LAMP_ID } from './hook.utils'\n\n\nexport const useLightTransitions = (lampState: eLampState) => {\n  const timeoutRef = useRef<any>()\n\n  const changeColor = useCallback(() => {\n    clearTimeout(timeoutRef.current)\n    const root = document.getElementById(LAMP_ID)\n\n    if (lampState === eLampState.ok || lampState === eLampState.happy || lampState === eLampState.neutral) {\n      root?.style.setProperty('--brightness', getRandomBetween([70, 120]) + '%')\n      root?.style.setProperty('--hue', getRandomBetween([0, 180]) + 'deg')\n      root?.style.setProperty('--saturate', getRandomBetween([70, 120]) + '%')\n    } else {\n      root?.style.setProperty('--hue', 0 + 'deg')\n      root?.style.setProperty('--saturate', 30 + '%')\n    }\n    let nextChange = [1000, 1000]\n\n    switch (lampState) {\n      case eLampState.happy:\n        nextChange = [500, 1000]\n        break\n      case eLampState.ok:\n        nextChange = [2000, 5000]\n        break\n      case eLampState.neutral:\n        nextChange = [2000, 5000]\n        break\n    }\n\n    timeoutRef.current = setTimeout(changeColor, getRandomBetween(nextChange))\n  }, [lampState])\n\n  useEffect(() => {\n    changeColor()\n  }, [lampState, changeColor])\n\n  return timeoutRef.current\n}\n","import { useCallback, useEffect, useRef } from 'react'\nimport { eLampState } from '../lampState.enum'\nimport { getRandomBetween } from './hook.utils'\n\nexport const useLightBlink = (lampState: eLampState) => {\n\n  const blinkTimeoutRef = useRef<any>()\n\n  const blink = useCallback(() => {\n    const root = document.body\n    let withoutLight = [100, 200]\n    let nextBlink = [1000, 2000]\n    switch (lampState) {\n      case eLampState.nightmare:\n        withoutLight = [100, 1500]\n        nextBlink = [100, 500]\n        break\n      case eLampState.sad:\n        withoutLight = [200, 500]\n        nextBlink = [1000, 4000]\n        break\n      case eLampState.neutral:\n        withoutLight = [100, 200]\n        nextBlink = [5000, 8000]\n        break\n    }\n\n    clearTimeout(blinkTimeoutRef.current)\n    if (lampState === eLampState.nightmare || lampState === eLampState.sad || lampState === eLampState.neutral) {\n      root?.style.setProperty('--opacity', '0%')\n    }\n    setTimeout(() => {\n      root?.style.setProperty('--opacity', '100%')\n      blinkTimeoutRef.current = setTimeout(() => {\n        blink()\n      }, getRandomBetween(nextBlink))\n    }, getRandomBetween(withoutLight))\n  }, [lampState])\n\n  useEffect(() => {\n    blink()\n  }, [lampState, blink])\n\n}\n","import { useContext, useEffect, useRef, useState } from 'react'\nimport useSound from 'use-sound'\nimport './App.css'\nimport { LoadedContext } from './context/loaded.context'\nimport { ScoreContext } from './context/score.context'\nimport { eLampState } from './lampState.enum'\n\nconst nightmare = require('./assets/ludum_dare_beta_-5.mp3').default\nconst sad = require('./assets/ludum_dare_beta_-2.5.mp3').default\nconst neutral = require('./assets/ludum_dare_beta_0.mp3').default\nconst ok = require('./assets/ludum_dare_beta_2.5.mp3').default\nconst happy = require('./assets/ludum_dare_beta_5.mp3').default\n\nconst plus = require('./assets/ludum_dare_beta_plus.mp3').default\nconst minus = require('./assets/ludum_dare_beta_minus.mp3').default\n\nconst VOLUME = .3\nconst FADE_DURATION = 800\nconst params = { loop: true, soundEnabled: true, volume: 0 }\n\nfunction doSound(currentSound: eLampState | null, soundState: eLampState, howlerObject: any) {\n  if (!howlerObject) {\n    return\n  }\n  if (currentSound === soundState) {\n    howlerObject.fade(howlerObject.volume(), VOLUME, FADE_DURATION)\n  } else {\n    howlerObject.fade(howlerObject.volume(), 0, FADE_DURATION)\n  }\n}\n\nexport function Music({ gameStarted }: { gameStarted: boolean }) {\n  const { score, lampState } = useContext(ScoreContext)\n  const { soundLoaded } = useContext(LoadedContext)\n\n  const [, { sound: nightmareSound }] = useSound(nightmare, params)\n  const [, { sound: sadSound }] = useSound(sad, params)\n  const [, { sound: neutralSound }] = useSound(neutral, params)\n  const [, { sound: okSound }] = useSound(ok, params)\n  const [, { sound: happySound }] = useSound(happy, params)\n\n  const [, { sound: plusJingle }] = useSound(plus, { loop: false, volume: VOLUME })\n  const [, { sound: minusJingle }] = useSound(minus, { loop: false, volume: VOLUME })\n\n  const [currentSound, setCurrentSound] = useState<eLampState | null>(null)\n\n  const prevScore = useRef<number>(score)\n\n  useEffect(() => {\n    if (neutralSound?.state() === 'loaded'\n      && okSound?.state() === 'loaded'\n      && nightmareSound?.state() === 'loaded'\n      && sadSound?.state() === 'loaded'\n      && happySound?.state() === 'loaded'\n    ) {\n      soundLoaded && soundLoaded(true)\n      neutralSound.play()\n      okSound.play()\n      happySound.play()\n      nightmareSound.play()\n      sadSound.play()\n    }\n\n  }, [soundLoaded, neutralSound, happySound, nightmareSound, sadSound, okSound])\n  //\n  //useEffect(() => {\n  //\n  //  console.log(score, currentSound, [happySound, okSound, neutralSound, sadSound, nightmareSound].map(s => {\n  //    return (s?.volume() + s?.state())\n  //  }))\n  //}, [currentSound, score,  neutralSound, happySound, okSound, sadSound, nightmareSound])\n\n  useEffect(() => {\n      if (!gameStarted) {\n        return\n      }\n      setCurrentSound(lampState)\n    },\n    [lampState, gameStarted]\n  )\n\n  useEffect(() => {\n    if (prevScore.current === score) {\n      return\n    }\n    if (prevScore.current < score) {\n      plusJingle?.play()\n    } else {\n      minusJingle?.play()\n    }\n    prevScore.current = score\n  }, [score, minusJingle, plusJingle])\n\n  useEffect(() => {\n    doSound(currentSound, eLampState.neutral, neutralSound)\n    doSound(currentSound, eLampState.nightmare, nightmareSound)\n    doSound(currentSound, eLampState.sad, sadSound)\n    doSound(currentSound, eLampState.ok, okSound)\n    doSound(currentSound, eLampState.happy, happySound)\n  }, [currentSound, neutralSound, happySound, okSound, sadSound, nightmareSound])\n\n  return (\n    <>\n\n    </>\n  )\n}\n\n","import { useContext } from 'react'\nimport { ScoreContext } from './context/score.context'\nimport './Speech.css'\nimport { SpeechContext } from './context/speech.context'\n\nexport function Speech() {\n  const { score, setScore } = useContext(ScoreContext)\n  const { getQuestion } = useContext(SpeechContext)\n\n  return (\n\n    <div className=\"speech-container\">\n      <div className=\"speech\">\n        {getQuestion()}\n      </div>\n    </div>\n  )\n}\n\n","import React, { useEffect, useState } from 'react'\nimport './App.css'\nimport { Buttons } from './Buttons'\nimport { LoadedContextProvider } from './context/loaded.context'\nimport { ScoreContext } from './context/score.context'\nimport { SpeechContextProvider } from './context/speech.context'\nimport { Lamp } from './Lamp'\nimport { getStateByScore } from './lampState.enum'\nimport { Music } from './Music'\nimport { Speech } from './Speech'\n\nfunction App() {\n\n  const [gameStarted, setGameStarted] = useState(false)\n  const [showControls, setShowControls] = useState(false)\n  const [score, setScore] = useState(0)\n  const [lampState, setLampState] = useState(getStateByScore(score))\n\n  const [allIsLoaded, setAllIsLoaded] = useState(false)\n\n  useEffect(() => {\n    if (gameStarted) {\n      setShowControls(true)\n    }\n  }, [gameStarted])\n\n  useEffect(() => {\n    setLampState(getStateByScore(score))\n  }, [score])\n\n  const setGameOver = () => {\n\n  }\n\n  return (\n    <>\n      <LoadedContextProvider setAllIsLoaded={setAllIsLoaded}>\n        <SpeechContextProvider setGameOver={setGameOver}>\n          <ScoreContext.Provider value={{ score, setScore, lampState }}>\n\n            <Music gameStarted={gameStarted}/>\n            {!allIsLoaded && <button className=\"loading-btn btn--stripe btn\">\n              Loading...\n            </button>}\n            <div className={\"Game \"+ lampState} style={{ opacity: allIsLoaded ? 1 : 0 }}>\n              <div className='light bg '/>\n              <Lamp/>\n              {showControls && <Speech/>}\n              {\n                !gameStarted &&\n                <button className=\"btn--stripe start-btn btn\"\n                        onClick={() => {setGameStarted(true)}}>\n                  Play\n                </button>\n              }\n            </div>\n            {showControls && <Buttons/>}\n          </ScoreContext.Provider>\n        </SpeechContextProvider>\n      </LoadedContextProvider>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <link href=\"https://fonts.googleapis.com/css?family=Baloo+2:400,800\" rel=\"stylesheet\"/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n//document.getElementById('root').classList.add('light');\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}